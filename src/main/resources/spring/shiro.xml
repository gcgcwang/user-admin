<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		 ">
		 
		 <!-- 自定义的密码匹配器 -->
	<bean id="credentialsMatcher" class="com.nang.system.security.SystemCredentilsMatcher"/>
		<bean id="systemBO" class="com.nang.system.bo.SystemBO"></bean>
	<!-- 自定义的授权认证方式 -->
	<bean id="systemAuthorizingRealm" class="com.nang.system.security.SystemAuthorizingRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher"/>
 		<property name="systemBO" ref="systemBO"></property>
	</bean>
		 
    
    <!-- 安全认证过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
         <property name="loginUrl" value="/sys/toLogin.do" /> 
           <!-- 错误页面 -->  
        <property name="unauthorizedUrl" value="/sys/error.jsp"/> 
        <property name="filterChainDefinitions">
            <value>
                /static/** = anon
                /resources/** = anon
                /sys/ValidLogin.do=anon
                /sys/logout.do = anon
                /** = authc
            </value>
        </property>
    </bean>
    
	
    
    <!-- 定义Shiro安全管理配置 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="systemAuthorizingRealm" />
        <property name="sessionManager" ref="sessionManager" />
        <property name="cacheManager" ref="shiroCacheManager" />
    </bean>
    
    <!-- 自定义会话管理配置 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager"> 
        <property name="sessionDAO" ref="sessionDAO"/>
        <!-- 会话超时时间，单位：毫秒  -->
        <property name="globalSessionTimeout" value="${session.sessionTimeout}"/>
        <!-- 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话   -->
        <property name="sessionValidationInterval" value="${session.sessionTimeoutClean}"/>
         <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <property name="sessionIdCookieEnabled" value="true"/>
    </bean>
    
    <!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
        当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg name="name" value="jeeSpringwork.sessionId"/>
    </bean>

    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

  <!-- 定义授权缓存管理器 -->
    <!--  <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:config/spring/ehcache.xml" />
    </bean> -->
    
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />
    
    
    <!-- 自定义Session存储容器 -->

    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
<!--     <bean id="sessionDAO" class="com.nang.springwork.security.SystemSessionDAO">
 -->        <property name="sessionIdGenerator" ref="sessionIdGenerator" />
	        <property name="activeSessionsCacheName" value="activeSessionsCache" />
	        <property name="cacheManager" ref="shiroCacheManager" />
    </bean>
    
  
	    
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    
    <!--   
	       开启Shiro的注解(如@RequiresRoles，@RequiresPermissions)，需借助SpringAOP扫描使用Shiro注解的类，  
	       并在必要时进行安全逻辑验证  
    -->  
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true" />
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    

		 
		 
</beans>